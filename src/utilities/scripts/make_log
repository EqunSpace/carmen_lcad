#!/bin/bash

RED_COLOR='\033[1;31m'
YELLOW_COLOR='\033[1;33m'
LIGHT_CYAN_COLOR='\033[1;36m'
NO_COLOR='\033[0m'

RESULT_FILE="log_$$.txt"


function display_usage_exit()
{
	if [[ "$2" ]]; then echo -e "\n$2\n"; fi
	echo -e "\nThis script performs the make utility, logging all warning and error messages to disk and printing them on screen\n"
	echo -e "Usage: $0  [-a]  [-s]\n"
	echo -e "       -a :  log all <stdout> and <stderr> messages to disk (otherwise <stderr> only)"
	echo -e "       -s :  silent option (do not print messages on screen)\n"
	exit "$1"
}


if [[ $# -ge 1 ]] && [[ "$1" = "-h" ]]; then display_usage_exit 1; fi

for ARG in "$@"; do
	if [[ $ARG = -a ]]; then
		ALL=true
	elif [[ $ARG = -s ]]; then
		SILENT=true
	else
		display_usage_exit 1 "$ARG: Invalid argument"
	fi
done

#set -x
if [[ "$ALL" = "" ]]; then
	if [[ "$SILENT" = "" ]]; then
		err="${TMPDIR:-/tmp}/err.$$"
		mkfifo "$err"
		trap 'rm "$err"' EXIT
		tee -a $RESULT_FILE < "$err" >&2 &
		make 2> "$err"
	else
		make > /dev/null 2> $RESULT_FILE
	fi
else
	if [[ "$SILENT" = "" ]]; then
		make 2>&1 | tee $RESULT_FILE
	else
		make &> $RESULT_FILE
	fi
fi

RESULT="$?"
if [ $RESULT -ne 0 ]; then
	echo -e "\nError (See $RESULT_FILE)\n"
	exit $RESULT
fi

WARNINGS=$(grep "warning:" $RESULT_FILE | wc -l)
ERRORS=$(grep "error:" $RESULT_FILE | wc -l)
if (( $WARNINGS + $ERRORS == 0 )); then SUMMARY="No warning or error"; fi
if (( $WARNINGS > 1 )); then Sw=s; fi
if (( $ERRORS > 1 )); then Se=s; fi
if (( $WARNINGS > 0 )); then SUMMARY="$YELLOW_COLOR$WARNINGS warning$Sw$NO_COLOR"; fi
if [[ $WARNINGS -gt 0 ]] && [[ $ERRORS -gt 0 ]]; then SUMMARY="$SUMMARY and "; fi
if (( $ERRORS > 0 )); then SUMMARY="$SUMMARY$RED_COLOR$ERRORS error$Se$NO_COLOR"; fi

echo -e "\n$SUMMARY found (See $RESULT_FILE)\n"

